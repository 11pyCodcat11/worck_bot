#AddSpamBanner.photo
import sqlite3
from aiogram import Router, F, Bot
from aiogram.filters import Command
from aiogram.types import Message
from aiogram import types
from untils import AddSpamBanner, AddSpamChenal
from aiogram.fsm import state
from aiogram.fsm.context import FSMContext
import asyncio
from keyboards.rkb import phone_keyboard
from keyboards.ikb import create_spam_ikb, admin_chtck_baner1, admin_chtck_baner0, time_to_chenal_ikb

#   await state.update_data(phone_number=message.text)
#   user_data = await state.get_data()
router = Router()



@router.message(AddSpamBanner.photo, F.photo)
async def AddSpamBanner_photo_funck(message: Message, bot: Bot, state: FSMContext):
    await state.update_data(photo = message.photo[0].file_id)
    await bot.send_message(message.from_user.id, 'üìù–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ –¥–ª—è –±–∞–Ω–Ω–µ—Ä–∞:\n(–ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–º–µ—Å—Ç–∏—Ç—å –≤ —Ç–µ–∫—Å—Ç—ã —Å—Å—ã–ª–∫—É, —Å–¥–µ–ª–∞–π—Ç–µ —ç—Ç–æ —Å–µ–π—á–∞—Å —á–µ—Ä–µ–∑ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ telegram)')
    await state.set_state(AddSpamBanner.desc)

@router.message(AddSpamBanner.desc, F.text)
async def AddSpamBanner_desc_funck(message: Message, bot: Bot, state: FSMContext):
    await state.update_data(desc = message.html_text)
    await bot.send_message(message.from_user.id, '–í –±–∞–Ω–µ—Ä–µ –±—É–¥—É—Ç –∫–Ω–æ–ø–∫–∏?\n<i>(–ö–Ω–æ–ø–∫–∏ –ø–æ–¥—Ä–∞–∑—É–º–∏–≤–∞—é—Ç –Ω–∞–ª–∏–∏–µ —Å—Å—ã–ª–æ–∫)</i>', reply_markup=phone_keyboard, parse_mode='html')
    await state.set_state(AddSpamBanner.butn)

@router.message(AddSpamBanner.butn, F.text)
async def AddSpamBanner_butn_funck(message: Message, bot: Bot, state: FSMContext):
    if message.text == '–î–∞‚úÖ':
        await bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –Ω–∞ –∫–Ω–æ–ø–∫–∞—Ö –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤ –≤ —Ñ–æ–Ω–º–∞—Ç–µ <i>(–ö–Ω–æ–ø–∞–∫–∞1:–ö–Ω–æ–ø–∫–∞2:–ö–Ω–æ–ø–∫–∞3)</i>:', parse_mode='html')
        await state.set_state(AddSpamBanner.bytton_text)
    else:
        data = await state.get_data()
        await message.answer_photo(photo=data['photo'], caption=data['desc'], reply_markup=admin_chtck_baner0, parse_mode='html', disable_web_page_preview=True)
        await state.set_state(AddSpamBanner.send_for_chat)


@router.message(AddSpamBanner.bytton_text, F.text)
async def AddSpamBanner_bytton_text_funck(message: Message, bot: Bot, state: FSMContext):
    await state.update_data(text_for_btn_list = message.text.split(':'))
    await bot.send_message(message.from_user.id, '–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –≤ —Ñ–æ—Ä–º–∞—Ç–µ <i>(–°—Å—ã–ª–∫–∞1:–°—Å—ã–ª–∫–∞2:–°—Å—ã–ª–∫–∞3)</i>\n<b>–í–ê–ñ–ù–û! –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Å—ã–ª–æ–∫ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —Ä–∞–≤–Ω–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —Ç–µ–∫—Å—Ç–æ–≤ –∏ —Å—Å—ã–ª–∫–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ —Ç–æ–π –∂–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –∏ —Ç–µ–∫—Ç—ã –∫ –∫–æ—Ç–æ—Ä—ã–º —ç—Ç–∏ —Å—Å—ã–ª–∫–∏ –¥–æ–ª–∂–Ω—ã –ø—Ä–∏–ª–∞–≥–∞—Ç—å—Å—è.</b>:', reply_markup=phone_keyboard, parse_mode='html')
    await state.set_state(AddSpamBanner.button_url)

@router.message(AddSpamBanner.button_url, F.text)
async def AddSpamBanner_button_url_funck(message: Message, bot: Bot, state: FSMContext):
    await state.update_data(url_for_btn_list = message.text.split(':'))
    data = await state.get_data()
    i = []
    i.append(data['text_for_btn_list'])
    i.append(data['url_for_btn_list'])
    ikb = create_spam_ikb(i)
    await message.answer_photo(photo=data['photo'], caption=data['desc'], reply_markup=ikb, disable_web_page_preview=True, parse_mode='html')
    await bot.send_message(message.from_user.id, '–í—Å—ë –≤–µ—Ä–Ω–æ?', reply_markup=admin_chtck_baner1)
    await state.set_state(AddSpamBanner.send_for_chat)
    
    
@router.message(AddSpamChenal.chenal_url, F.text)
async def AddSpamChenal_chenal_url_funck(message: Message, bot: Bot, state: FSMContext):
    await state.update_data(chenal_url=message.html_text)
    await bot.send_message(message.from_user.id, 'üí¨–í–≤–µ–¥–∏—Ç–µ id —Ä–µ–∫–ª–∞–º–Ω–æ–≥–æ –∫–∞–Ω–∞–ª–∞:\n(id –∫–∞–Ω–∞–ª–∞ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –ø–æ <a href="https://t.me/username_to_id_bot">—Å—Å—ã–ª–∫–µ</a>)', parse_mode="html")
    await state.set_state(AddSpamChenal.id_chenal)



@router.message(AddSpamChenal.id_chenal, F.text)
async def AddSpamChenal_id_chenal_funck(message: Message, bot: Bot, state: FSMContext):
    await state.update_data(id_chenal=message.text)
    await bot.send_message(message.from_user.id, '‚è≥–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –∫–∞–Ω–∞–ª –±—É–¥–µ—Ç —Ä–∞–∑–º–µ—â—ë–Ω –≤ –±–æ—Ç–µ:', reply_markup=time_to_chenal_ikb)
    await state.set_state(AddSpamChenal.time_url)
