import datetime
import sqlite3
from aiogram import Router, F, Bot
from aiogram.filters import Command
from aiogram.types import Message
from keyboards.ikb import start_keyboard, help_keyboard, me_keyboard, top1, donate_keyboard, admin_first_btn
from data.data_base import create_bd_profil, create_bd_boost, create_bd_admin


router = Router()

@router.message(Command('start'))
async def start_funck(message: Message, bot: Bot):
    create_bd_profil(message.from_user.id)
    create_bd_boost(message.from_user.id)
    create_bd_admin()
    conn = sqlite3.connect('database_egg_bot.db')
    cur = conn.cursor()
    cur.execute("SELECT * FROM CHAT")
    rows = cur.fetchall()
    print(rows)
    result = []
    for i in rows:
        result.extend(i)
    print(result)
    if message.from_user.id not in result:
        cur.execute("INSERT INTO CHAT (id_chat) VALUES (?)", (message.from_user.id,))
        conn.commit()
    if message.from_user.id == 6491212354:
        await bot.send_message(message.from_user.id, '–î–æ–ø—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ <b>‚öôÔ∏è–∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å‚öôÔ∏è</b>.\n–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å <b>—Å–ª–µ–¥—É—é—â–∏–µ –¥–µ–π—Å—Ç–≤–∏—è:</b>', parse_mode="html", reply_markup=admin_first_btn)
    else:
        today_date = datetime.datetime.now().strftime('%Y-%m-%d')
        conn = sqlite3.connect('database_egg_bot.db')
        cur = conn.cursor()
        cur.execute(f"INSERT INTO database_{message.from_user.id} (agges_index, win_index, change_index, all_ags, date_of_reg) VALUES (?, ?, ?, ?, ?)", (0, 0, 0, 0, today_date))
        conn.commit()
        conn.close()
        conn = sqlite3.connect('database_eggBOOST_bot.db')
        cur = conn.cursor()
        cur.execute(f"INSERT INTO database_{message.from_user.id} (cash_index, proizvod, vinosliv, stong) VALUES (?, ?, ?, ?)", (0, 0, 0, 0))
        conn.commit()
        conn.close()
        await bot.send_message(message.from_user.id, '<b>–ü—Ä–∏–≤–µ—Ç üëãüèº –Ø - –ë—Ä–æ—Å—å–Ø–π—Ü–æ–ë–æ—Ç  ü•ö</b>\n\n'
                                                    '<b>üü¢–î–æ–±–∞–≤–ª—è–π –º–µ–Ω—è –≤ —á–∞—Ç –∏ –±—Ä–æ—Å–∞–π —è–π—Ü–∞ –≤ —Å–≤–æ–∏—Ö –¥—Ä—É–∑–µ–π!üü¢</b>\n\n'
                                                    'üòé –¢–∞–∫ –∂–µ –∑–∞ –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –ª. ü•ö —Ç—ã –º–æ–∂–µ—à—å –ø—Ä–æ–∫–∞—á–∏–≤–∞—Ç—å —Å–µ–±—è!\n\n'
                                                    '<i>–ï—Å–ª–∏ —Ç–µ–±–µ —Å–∫—É—á–Ω–æ, –º–æ–∂–µ—à—å –µ—â—ë –∑–∞–π—Ç–∏ –≤</i>\n'
                                                    '<i>–Ω–∞—à <a href="https://t.me/harcha_chat">–û—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π —á–∞—Ç–∏–∫</a></i>ü•∞\n'
                                                    '<b>–ï—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã? –ü–∏—à–∏ –∫–æ–º–∞–Ω–¥—É /help</b>',
                                                    parse_mode='html',
                                                    reply_markup=start_keyboard,    
                                                    disable_web_page_preview=True
                                )
    
@router.message(Command('help'))
async def help_funck(message: Message, bot: Bot):
    await bot.send_message(message.from_user.id,
    f'<a href="https://t.me/{message.from_user.first_name}">{message.from_user.first_name}</a>\n'
    '–ö–æ–º–∞–Ω–¥—ã\n\n'
    '/me - –ü—Ä–æ—Ñ–∏–ª—å\n'
    '/spit - –•–∞—Ä–∫–Ω—É—Ç—å\n'
    '/duel - –î—É—ç–ª—å\n'
    '/top - –¢–æ–ø –∏–≥—Ä–æ–∫–æ–≤\n'
    '/pay - –î–æ–Ω–∞—Ç\n\n'
    'üòé –ó–∞—Ö–æ–¥–∏ –≤ –Ω–∞—à —á–∞—Ç, –∏\n –±—Ä–æ—Å–∞–π —è–π—Ü–∞ —Ç–∞–º - @harcha_chat\n'
    'ü•∞ –ü–∏—à–∏ @harcha_gamebot –≤\n –ª—é–±–æ–º —á–∞—Ç–µ –∏ –±—Ä–æ—Å–∞–π —è–π—Ü–∞',
    parse_mode='html',
    reply_markup=help_keyboard,
    disable_web_page_preview=True
        )

@router.message(Command('me'))
async def me_funck(message: Message, bot: Bot):
    conn = sqlite3.connect('database_egg_bot.db')
    cur = conn.cursor()
    cur.execute(f"""SELECT * FROM database_{message.from_user.id}""")
    rows = cur.fetchall()
    r = list(rows)
    print(f'https://t.me/{message.from_user.username}')
    cur.execute(f"SELECT SUM(agges_index) FROM database_{message.from_user.id}")
    total_agges_index = cur.fetchone()[0]
    await bot.send_message(message.from_user.id, f'<a href="https://t.me/{message.from_user.username}">{message.from_user.first_name}</a>\n'
                                                     f'ü•ö –ë—Ä–æ—à–µ–Ω–æ —è–∏—Ü: {r[0][0]} —à—Ç.\n'
                                                     f'‚öîÔ∏è –ü–æ–±–µ–¥: {r[0][1]}\n'
                                                     f'üî• –ü–æ–ø—ã—Ç–∫–∏: {r[0][2]}\n'
                                                     f'üìä –í—Å–µ–≥–æ –±—Ä–æ—à–µ–Ω–æ —è–∏—Ü: {total_agges_index}\n'
                                                     f'üìÖ –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: <b>{r[0][4]}</b>',
                                                     parse_mode='html',
                                                     reply_markup=me_keyboard,
                                                     disable_web_page_preview=True
                                                     )
    conn.close()

@router.message(Command('spit'))
async def spit_funck(message: Message, bot: Bot):
    await bot.send_message(message.from_user.id, 'üí¨ –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ —á–∞—Ç–∞—Ö üòî\n–î–æ–±–∞–≤—å –º–µ–Ω—è –≤ —Å–≤–æ–π —á–∞—Ç –∏ –∏–≥—Ä–∞–π ü•ö',
                           reply_markup=start_keyboard
                           )

@router.message(Command('duel'))
async def spit_funck(message: Message, bot: Bot):
    await bot.send_message(message.from_user.id, 'üí¨ –≠—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –≤ —á–∞—Ç–∞—Ö üòî\n–î–æ–±–∞–≤—å –º–µ–Ω—è –≤ —Å–≤–æ–π —á–∞—Ç –∏ –∏–≥—Ä–∞–π ü•ö',
                           reply_markup=start_keyboard
                           )
    
@router.message(Command('top'))
async def top_funck(message: Message, bot: Bot):
    await bot.send_message(message.from_user.id, f'{message.from_user.first_name}, –∫–∞–∫–æ–π —Ç–æ–ø —Ö–æ—á–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å? üìä',
                           reply_markup=top1
                           )
    
@router.message(Command('pay'))
async def top_funck(message: Message, bot: Bot): 
    await bot.send_message(message.from_user.id, f'üí∞ –ú–µ–Ω—é –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–π üíé\n\nü§ñ –ü–æ–º–æ–≥–∏—Ç–µ –±–æ—Ç—É —Å—Ç–∞—Ç—å –µ—â–µ –ª—É—á—à–µ! üöÄ\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ø—ã—Ç–æ–∫, –∫–æ—Ç–æ—Ä—ã–µ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏:üëá',
                           reply_markup=donate_keyboard
                           )






